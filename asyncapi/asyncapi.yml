asyncapi: 2.3.0
info:
  title: Avtale om digitale tjenester - ADT
  description:
    $ref: markdown/introduction.md
  termsOfService: https://ruter.no
  contact:
    name: RDP Support
    url: https://ruteras.slack.com/archives/CKJ2V79SN
    email: rdp-support@ruter.no
  license:
    name: GPL 3.0
    url: https://ruter.no
  version: version.from.tag
servers:
  mqtt.transhub.io:
    url: mqtt.transhub.io
    protocol: mqtt
    description: Ruters central MQTT broker
    variables:
      port:
        description: The mqtt broker is available through TCP (:8883) and Websockets (:9883)
        default: '8883'
        enum:
          - '8883'
          - '9883'
    security:
      - user-password: [ ]

defaultContentType: application/json
channels:
  operational/assignment/attempt/request:
    description:
      $ref: json-schemas/operational/assignment/attempt/request/assignment-attempt-request.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/operational/assignment/attempt/request/assignment-attempt-request-01.example.json
        name: AssignmentAttemptRequest
        payload:
          $ref: json-schemas/operational/assignment/attempt/request/assignment-attempt-request.json
        schemaFormat: application/schema+json;version=draft-07
  operational/assignment/attempt/response:
    description:
      $ref: json-schemas/operational/assignment/attempt/response/assignment-attempt-response.md
    subscribe:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/operational/assignment/attempt/response/assignment-attempt-response-01.example.json
        name: AssignmentAttemptResponse
        payload:
          $ref: json-schemas/operational/assignment/attempt/response/assignment-attempt-response.json
        schemaFormat: application/schema+json;version=draft-07
  operational/assignment/status:
    description:
      $ref: json-schemas/operational/assignment/status/assignment-status.md
    subscribe:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: true
        examples:
          - $ref: json-schemas/operational/assignment/status/assignment-status-01.example.json
        name: AssignmentStatus
        payload:
          $ref: json-schemas/operational/assignment/status/assignment-status.json
        schemaFormat: application/schema+json;version=draft-07
  proprietary_extensions/active_cab:
    description:
      $ref: json-schemas/proprietary-extensions/active-cab/active-cab.md
    publish:
      message:
        bindings:
          mqtt:
            qos: '1'
            retain: true
        examples:
          - $ref: json-schemas/proprietary-extensions/active-cab/active-cab.example.json
        name: ActiveCab
        payload:
          $ref: json-schemas/proprietary-extensions/active-cab/active-cab.json
        schemaFormat: application/schema+json;version=draft-07
  proprietary_extensions/door_lock:
    description:
      $ref: json-schemas/proprietary-extensions/door-lock/door-lock.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/proprietary-extensions/door-lock/door-lock.example.json
        name: DoorLock
        payload:
          $ref: json-schemas/proprietary-extensions/door-lock/door-lock.json
        schemaFormat: application/schema+json;version=draft-07
  proprietary_extensions/doors_individually:
    description:
      $ref: json-schemas/proprietary-extensions/doors-individually/doors-individually.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/proprietary-extensions/doors-individually/doors-individually.example.json
        name: DoorsIndividually
        payload:
          $ref: json-schemas/proprietary-extensions/doors-individually/doors-individually.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/apc/{sensorId}:
    description:
      $ref: json-schemas/sensors/apc/apc.md
    parameters:
      sensorId:
        $ref: '#/components/parameters/sensorId'
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/sensors/apc/apc-01.example.json
        name: Apc
        payload:
          $ref: json-schemas/sensors/apc/apc.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/door:
    description:
      $ref: json-schemas/sensors/door/door.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: true
        examples:
          - $ref: json-schemas/sensors/door/door-01.example.json
        name: Door
        payload:
          $ref: json-schemas/sensors/door/door.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/gnss/location:
    description:
      $ref: json-schemas/sensors/gnss/location/location.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 0
            retain: false
        examples:
          - $ref: json-schemas/sensors/gnss/location/location-01.example.json
        name: Location
        payload:
          $ref: json-schemas/sensors/gnss/location/location.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/odometer:
    description:
      $ref: json-schemas/sensors/odometer/odometer.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 0
            retain: false
        examples:
          - $ref: json-schemas/sensors/odometer/odometer-01.example.json
        name: Odometer
        payload:
          $ref: json-schemas/sensors/odometer/odometer.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/stop_button:
    description:
      $ref: json-schemas/sensors/stop-button/stop-button.md
    publish:
      message:
        bindings:
          mqtt:
            qos: 1
            retain: false
        examples:
          - $ref: json-schemas/sensors/stop-button/stop-button-01.example.json
        name: StopButton
        payload:
          $ref: json-schemas/sensors/stop-button/stop-button.json
        schemaFormat: application/schema+json;version=draft-07
  sensors/telemetry/{sensorId}:
    description:
      $ref: json-schemas/sensors/telemetry/telemetry.md
    parameters:
      sensorId:
        $ref: '#/components/parameters/sensorId'
    publish:
      message:
        bindings:
          mqtt:
            qos: 0
            retain: false
        examples:
          - $ref: json-schemas/sensors/telemetry/telemetry-addressing-scheme.example.json
          - $ref: json-schemas/sensors/telemetry/telemetry-01.example.json
        name: Telemetry
        payload:
          $ref: json-schemas/sensors/telemetry/telemetry.json
        schemaFormat: application/schema+json;version=draft-07

  di/override_attempt/destination_display:
    description:
      $ref: markdown/destination-display-override.md
    publish:
      message:
        name: Destination Display Override Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/destination-display-override.json
        examples: [
          { $ref: examples/destination-display-override.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  oi/vehicle/unique_identifier:
    description:
      $ref: markdown/unique-identifier.md
    publish:
      message:
        name: UniqueIdentifier Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/unique-identifier.json
        examples: [
          { $ref: examples/unique-identifier.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi_ack:
    description:
      $ref: markdown/dpi-acknowledge.md
    publish:
      message:
        name: DPIAcknowledge Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-acknowledge.json
        examples: [
          { $ref: examples/dpi-acknowledge.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi_diagnostics:
    description:
      $ref: markdown/dpi-diagnostics.md
    publish:
      message:
        name: DPI Diagnostics Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-diagnostics.json
        examples: [
          { $ref: examples/dpi-diagnostics.json },
          { $ref: examples/dpi-diagnostics-heartbeat.json },
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/sales/diagnostics:
    description:
      $ref: markdown/sales-diagnostics.md
    publish:
      message:
        name: RuterSalg Diagnostics MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/salesdiagnostics.json
        examples: [
          { $ref: examples/salesdiagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/cardreader_diagnostics/vix/{deviceRef}:
    description:
      $ref: markdown/cardreader_diagnostics.md
    parameters:
      deviceRef:
        $ref: '#/components/parameters/deviceRef'
    publish:
      message:
        name: Card Reader Diagnostics
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/cardreader_diagnostics.json
        examples: [
          { $ref: examples/cardreader_diagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 0
            retain: false
  di/available_destination_displays:
    description:
      $ref: markdown/available-destination-displays.md
    subscribe:
      message:
        name: Assignment Attempt Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/available-destination-displays.json
        examples: [
          { $ref: examples/available-destination-displays.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true

  di/operational_message_to_driver:
    description:
      $ref: markdown/operational-message-to-driver.md
    subscribe:
      message:
        name: OperationalMessageToDriver Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/operational-message-to-driver.json
        examples: [
          { $ref: examples/operational-message-to-driver.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  ei/audio_message:
    description:
      $ref: markdown/audio.md
    subscribe:
      message:
        name: Audio MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/audio.json
        examples: [
          { $ref: examples/audio.json },
          { $ref: examples/audio_local.json },
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/journey:
    description:
      $ref: markdown/dpi-journey.md
    subscribe:
      externalDocs:
        description: https://ruterno.github.io
        url: https://ruterno.github.io/#/docs/ota?id=vehicle-journey
      message:
        name: Journey Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-journey.json
        examples: [
          { $ref: examples/dpi-journey.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/nextstop:
    description:
      $ref: markdown/dpi-nextstop.md
    subscribe:
      message:
        name: Next Stop MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-nextstop.json
        examples: [
          { $ref: examples/dpi-nextstop.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/eta:
    description:
      $ref: markdown/dpi-eta.md
    subscribe:
      message:
        name: ETA MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-eta.json
        examples: [
          { $ref: examples/dpi-eta.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/externaldisplay:
    description:
      $ref: markdown/dpi-externaldisplay.md
    subscribe:
      message:
        name: External Display MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-externaldisplay.json
        examples: [
          { $ref: examples/dpi-externaldisplay.json },
          { $ref: examples/dpi-externaldisplay_deadrun.json }

        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/pa:
    description:
      $ref: markdown/dpi-pa.md
    subscribe:
      message:
        name: Passenger Announcement message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-pa.json
        examples: [
          { $ref: examples/dpi-pa_video.json },
          { $ref: examples/dpi-pa_multiple.json },
          { $ref: examples/dpi-pa_text.json },
          { $ref: examples/dpi-pa_clear.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/arriving:
    description:
      $ref: markdown/dpi-arriving.md
    subscribe:
      message:
        name: Arriving Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-arriving.json
        examples: [
          { $ref: examples/dpi-arriving.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/connections:
    description:
      $ref: markdown/dpi-connections.md
    subscribe:
      message:
        name: The Connections Schema
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-connections.json
        examples: [
          { $ref: examples/dpi-connections.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/key_stops:
    description:
      $ref: markdown/dpi-key_stops.md
    subscribe:
      message:
        name: Key Stops message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-key_stops.json
        examples: [
          { $ref: examples/dpi-key_stops.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi_command:
    description:
      $ref: markdown/dpi-command.md
    subscribe:
      message:
        name: DPI Command Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-command.json
        examples: [
          { $ref: examples/dpi-command.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/input/stop_button:
    description:
      $ref: markdown/stop-button-input.md
    subscribe:
      message:
        name: Stop Button Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/sensors/stop-button/stop-button.json
        examples:
          - $ref: json-schemas/sensors/stop-button/stop-button-01.example.json
        bindings:
          mqtt:
            qos: 1
            retain: false
components:
  parameters:
    operatorId:
      description: The ID of the operator
      schema:
        type: string
    vehicleId:
      description: The vehicle ID.
      schema:
        type: string
    sensorId:
      description: The sensor / telemetry Id.
      schema:
        type: string
    deviceRef:
      description: An unique ID of the unit.
      schema:
        type: string
  securitySchemes:
    user-password:
      type: userPassword
      description: Please reach out to rdp-support@ruter.no to request access.
