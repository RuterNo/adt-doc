asyncapi: 2.3.0
info:
  title: Avtale om digitale tjenester - ADT
  description:
    $ref: markdown/introduction.md
  termsOfService: https://ruter.no
  contact:
    name: RDP Support
    url: https://ruteras.slack.com/archives/CKJ2V79SN
    email: rdp-support@ruter.no
  license:
    name: GPL 3.0
    url: https://ruter.no
  version: version.from.tag
servers:
  mqtt.transhub.io:
    url: mqtt.transhub.io
    protocol: mqtt
    description: Ruters central MQTT broker
    variables:
      port:
        description: The mqtt broker is available through TCP (:8883) and Websockets (:9883)
        default: '8883'
        enum:
          - '8883'
          - '9883'
    security:
      - user-password: []

defaultContentType: application/json
channels:
  signon/json:
    description:
      $ref: markdown/signon.md
    publish:
      message:
        name: Signon Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/signon.json
        examples: [
          { $ref: examples/signon.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  signoff/json:
    description:
      $ref: markdown/signoff.md
    publish:
      message:
        name: Signoff Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/signon.json
        examples: [
          { $ref: examples/signoff.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  avl/json:
    description:
      $ref: 'markdown/avl.md'
    publish:
      message:
        name: AVL MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/avl.json
        examples: [
          { $ref: examples/avl.json }
        ]
        bindings:
          mqtt:
            qos: 0
            retain: false
  telemetry/{telemetryId}/json:
    description:
      $ref: markdown/telemetry_description.md
    parameters:
      telemetryId:
        $ref: '#/components/parameters/telemetryId'
    publish:
      message:
        name: FMS-to-IP data
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/telemetry.json
        examples: [
          { $ref: examples/telemetry.json }
        ]
        bindings:
          mqtt:
            qos: 0
            retain: false
  apc/{sensorId}/json:
    description:
      $ref: markdown/apc-sensors.md
    parameters:
      sensorId:
        $ref: '#/components/parameters/sensorId'
    publish:
      message:
        name: Automatic passenger counter data
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/apc-sensors.json
        examples: [
          { $ref: examples/apc-sensors.json }
        ]
        bindings:
          mqtt:
            qos: 0
            retain: false
  sensors/activecab/json:
    description:
      $ref: markdown/active-cab.md
    publish:
      message:
        name: ActiveCab Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/active-cab.json
        examples: [
          { $ref: examples/active-cab.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  sensors/door:
    description:
      $ref: markdown/door.md
    publish:
      message:
        name: Door Sensors Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/door.json
        examples: [
          { $ref: examples/door.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  sensors/doorlock/json:
    description:
      $ref: markdown/door-lock.md
    publish:
      message:
        name: Doorlock Sensors Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/door-lock.json
        examples: [
          { $ref: examples/door-lock.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  stopsignal/json:
    description:
      $ref: 'markdown/stopsignal.md'
    publish:
      message:
        name: Stop signalled MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/stopsignal.json
        examples: [
          { $ref: examples/stopsignal.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi_diagnostics:
    description:
      $ref: 'markdown/dpi-diagnostics.md'
    publish:
      message:
        name: DPI Diagnostics message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-diagnostics.json
        examples: [
          { $ref: examples/dpi-diagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/sales/diagnostics:
    description:
      $ref: 'markdown/rutersalg-diagnostics.md'
    publish:
      message:
        name: RuterSalg Diagnostics MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/salediagnostics.json
        examples: [
          { $ref: examples/salediagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/sales/saleresult:
    description:
      $ref: 'markdown/rutersalg-saleresult.md'
    publish:
      message:
        name: Saleresult MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/saleresult.json
        examples: [
          { $ref: examples/saleresult.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/sales/validationresult:
    description:
      $ref: 'markdown/rutersalg-validationresult.md'
    publish:
      message:
        name: Validationresult MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/validationresult.json
        examples: [
          { $ref: examples/validationresult.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/dpi/emergency/json:
    description:
      $ref: 'markdown/infohub-emergency.md'
    publish:
      message:
        name: DPI Emergency message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/infohub-emergency.json
        examples: [
          { $ref: examples/infohub-emergency.json },
          { $ref: examples/infohub-emergency-disable.json },
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/dpi/diagnostics/json:
    description:
      $ref: 'markdown/infohub-diagnostics.md'
    publish:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: DPI Diagnostics message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-diagnostics.json
        examples: [
          { $ref: examples/dpi-diagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/sales/diagnostics/json:
    description:
      $ref: 'markdown/infohub-rutersalg-diagnostics.md'
    publish:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: RuterSalg Diagnostics MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/salediagnostics.json
        examples: [
          { $ref: examples/salediagnostics.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/sales/saleresult/json:
    description:
      $ref: 'markdown/infohub-rutersalg-saleresult.md'
    publish:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: Saleresult MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/saleresult.json
        examples: [
          { $ref: examples/saleresult.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/sales/validationresult/json:
    description:
        $ref: 'markdown/infohub-rutersalg-validationresult.md'
    publish:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: Validationresult MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/validationresult.json
        examples: [
          { $ref: examples/validationresult.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false

  pe/dpi/journey:
    description:
      $ref: 'markdown/dpi-journey.md'
    subscribe:
      externalDocs:
        description: https://ruterno.github.io
        url: https://ruterno.github.io/#/docs/ota?id=vehicle-journey
      message:
        name: Journey Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-journey.json
        examples: [
          { $ref: examples/dpi-journey.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/nextstop:
    description:
      $ref: 'markdown/dpi-nextstop.md'
    subscribe:
      message:
        name: Next Stop MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-nextstop.json
        examples: [
          { $ref: examples/dpi-nextstop.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/eta:
    description:
      $ref: 'markdown/dpi-eta.md'
    subscribe:
      message:
        name: ETA MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-eta.json
        examples: [
          { $ref: examples/dpi-eta.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/externaldisplay:
    description:
      $ref: 'markdown/dpi-externaldisplay.md'
    subscribe:
      message:
        name: External Display MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-externaldisplay.json
        examples: [
          { $ref: examples/dpi-externaldisplay.json },
          { $ref: examples/dpi-externaldisplay_deadrun.json }

        ]
        bindings:
          mqtt:
            qos: 1
            retain: true

  pe/dpi/pa:
    description:
      $ref: 'markdown/dpi-pa.md'
    subscribe:
      message:
        name: Passenger Announcement message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-pa.json
        examples: [
          { $ref: examples/dpi-pa_video.json },
          { $ref: examples/dpi-pa_multiple.json },
          { $ref: examples/dpi-pa_text.json },
          { $ref: examples/dpi-pa_clear.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/arriving:
    description:
      $ref: 'markdown/dpi-arriving.md'
    subscribe:
      message:
        name: Arriving Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-arriving.json
        examples: [
          { $ref: examples/dpi-arriving.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi_command:
    description:
      $ref: 'markdown/dpi-command.md'
    subscribe:
      message:
        name: C2 MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-command.json
        examples: [
          { $ref: examples/dpi-command.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/connections:
    description:
      $ref: 'markdown/dpi-connections.md'
    subscribe:
      message:
        name: The Connections Schema
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-connections.json
        examples: [
          { $ref: examples/dpi-connections.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/key_stops:
    description:
      $ref: 'markdown/dpi-key_stops.md'
    subscribe:
      message:
        name: Key Stops message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-key_stops.json
        examples: [
          { $ref: examples/dpi-key_stops.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  pe/dpi/deviation:
    description:
      $ref: 'markdown/dpi-deviation.md'
    subscribe:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: Deviation MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/deviation.json
        examples: [
          { $ref: examples/deviation.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  pe/dpi/announcement:
    description:
      $ref: 'markdown/dpi-announcement.md'
    subscribe:
      message:
        tags:
          - name: Deprecated
            description: This message will be removed in a later release.
        name: Announcement MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/announcement.json
        examples: [
          { $ref: examples/announcement.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  tsp/json:
    description:
      $ref: 'markdown/tsp.md'
    subscribe:
      message:
        name: Traffic Preemption MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/tsp.json
        examples: [
          { $ref: examples/tsp.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/dpi/audio/json:
    description:
      $ref: 'markdown/dpi-audio.md'
    subscribe:
      message:
        name: Audio MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/audio.json
        examples: [
          { $ref: examples/audio.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
  infohub/dpi/externaldisplay/json:
    description:
      $ref: 'markdown/infohub-externaldisplay.md'
    subscribe:
      message:
        name: External Display MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/dpi-externaldisplay.json
        examples: [
          { $ref: examples/dpi-externaldisplay.json },
          { $ref: examples/dpi-externaldisplay_deadrun.json }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: true
  infohub/madt/notification/json:
    description:
      $ref: 'markdown/madt-notification.md'
    subscribe:
      message:
        name: Notification MQTT Message
        schemaFormat: application/schema+json;version=draft-07
        payload:
          $ref: json-schemas/notification.json
        examples: [
          {
            $ref: examples/notification.json
          }
        ]
        bindings:
          mqtt:
            qos: 1
            retain: false
components:
  parameters:
    operatorId:
      description: The ID of the operator
      schema:
        type: string
    vehicleId:
      description: The vehicle ID.
      schema:
        type: string
    telemetryId:
      description: The telemetry / sensor ID.
      schema:
        type: string
    sensorId:
      description: The sensor ID.
      schema:
        type: string
  securitySchemes:
    user-password:
      type: userPassword
      description: Please reach out to rdp-support@ruter.no to request access.
