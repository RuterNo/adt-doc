{
  "openapi": "3.0.1",
  "info": {
    "title": "Event Reporting API",
    "description": "Use this API to report cancellation and delay events, as well as other SLA\nbreaches, directly to Ruter, along with a flag indicating whether you as an\noperator consider that the event was outside your control, and that you should\nbe exempt from being fined for incurred/reported SLA breach(es).\n",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://adt-event-reporting.transhub.io"
    }
  ],
  "paths": {
    "/adt/3.x/v1/traffic-events": {
      "post": {
        "tags": [
          "/v1/traffic-events"
        ],
        "summary": "Register traffic event",
        "description": "Report a cancellation or delay event.",
        "operationId": "create",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "OAuth2 access token as Bearer token.\n\n**NOTE:** Separate documentation will be provided on how to obtain client\ncredentials and use these to request access tokens.\n",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrafficEventRegistration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The traffic event was registered.\n\nThe response contains a single traffic event for the given journey if the\nregistration provided a `journeyRef`. If the registration provided a `lineRef`\nand a time interval, the response contains one traffic event for each journey\nthat took place on the given line in the given time period.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrafficEvent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "One or more invalid input parameters (e.g., invalid `category`)"
          },
          "401": {
            "description": "Expired access token"
          },
          "403": {
            "description": "Invalid access token or insufficient access for operation"
          }
        }
      }
    },
    "/adt/3.x/v1/sla-breaches": {
      "post": {
        "tags": [
          "/v1/sla-breaches"
        ],
        "summary": "Register SLA breach",
        "description": "Report an SLA breach directly to Ruter, along with a flag indicating whether you as an\noperator consider that the breach was outside your control, and that you should be\nexempt from being fined for the breach.\n",
        "operationId": "create_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "OAuth2 access token as Bearer token.\n\n**NOTE:** Separate documentation will be provided on how to obtain client\ncredentials and use these to request access tokens.\n",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlaBreach"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The SLA breach was registered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlaBreach"
                }
              }
            }
          },
          "400": {
            "description": "One or more invalid input parameters (e.g., invalid `category`)"
          },
          "401": {
            "description": "Expired access token"
          },
          "403": {
            "description": "Invalid access token or insufficient access for operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TrafficEvent": {
        "required": [
          "category",
          "endDateTime",
          "id",
          "isOperatorExempt",
          "journeyRef",
          "lineRef",
          "reason",
          "reasonCategory",
          "reasonSubcategory",
          "registeredAt",
          "registeredBy",
          "registrationId",
          "startDateTime",
          "status",
          "subcategory",
          "trafficCaseNumber",
          "vehicleTaskId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The traffic event ID. Format: <registration-ID>-<sequence number>",
            "example": "1234-1"
          },
          "registrationId": {
            "type": "integer",
            "description": "The ID of the traffic event registration that was submitted for this traffic event.",
            "format": "int64",
            "example": 1234
          },
          "status": {
            "type": "string",
            "description": "The status of the traffic event.",
            "default": "LOGGED",
            "enum": [
              "REGISTERED",
              "LOGGED",
              "NOTIFIED",
              "RECALLED"
            ]
          },
          "trafficCaseNumber": {
            "type": "string",
            "description": "The traffic case number of the Ruterlogg traffic case that was created from the\ntraffic event registration submitted for this traffic event.\n",
            "example": "2023-1234"
          },
          "category": {
            "type": "string",
            "description": "The main category of the traffic event.",
            "example": "CANCELLATION"
          },
          "subcategory": {
            "type": "string",
            "description": "The subcategory of the traffic event.",
            "example": "PARTIAL"
          },
          "reasonCategory": {
            "type": "string",
            "description": "The reason category of the traffic event. Inferred from `category`, `subcategory` and\n`reason`.\n",
            "example": "TRAFFIC_CONDITIONS"
          },
          "reasonSubcategory": {
            "type": "string",
            "description": "The reason subcategory of the traffic event. Inferred from `category`, `subcategory`\nand `reason`.\n",
            "example": "OBSTRUCTION"
          },
          "reason": {
            "type": "string",
            "description": "The reason for the traffic event.",
            "example": "IMPROPERLY_PARKED_VEHICLE"
          },
          "reasonDescription": {
            "type": "string",
            "description": "If needed, a further detailing of the reason for the traffic event.",
            "example": "En feilparkert bil blokkerte tras√©en",
            "default": "null"
          },
          "journeyRef": {
            "type": "string",
            "description": "A reference to the planned journey that is affected by this traffic event.",
            "example": "RUT:DatedServiceJourney:123456"
          },
          "lineRef": {
            "type": "string",
            "description": "A reference to the line that the journey is serving.",
            "example": "RUT:Line:123"
          },
          "vehicleTaskId": {
            "type": "string",
            "description": "The ID of the vehicle task that the journey was part of.",
            "example": "1234"
          },
          "startDateTime": {
            "type": "string",
            "description": "An ISO UTC date string representing the date and time that the traffic event started.",
            "example": "2023-01-01T12:00:00Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "An ISO UTC date string representing the date and time that the traffic event ended.",
            "example": "2023-01-01T12:00:00Z"
          },
          "affectedQuayRefs": {
            "type": "array",
            "description": "If `category` is `CANCELLATION`: A list wth references to the quays affected by\nthe partial cancellation.\n\n`null` otherwise.\n",
            "example": [
              "NSR:Quay:123",
              "NSR:Quay:246"
            ],
            "items": {
              "type": "string"
            }
          },
          "delayMinutes": {
            "type": "integer",
            "description": "If `category` is `DELAY`: The number of minutes that the journey is delayed.\n\n`null` otherwise.\n",
            "format": "int32",
            "example": 21
          },
          "isOperatorExempt": {
            "type": "boolean",
            "description": "A flag indicating whether you as an operator should be exempt from being fined for any\nSLA breach(es) incurred as a consequence of this traffic event.\n",
            "default": true
          },
          "registeredBy": {
            "type": "string",
            "description": "Your operator's client identifier, automatically inferred from your API credentials.",
            "example": "Ruterbuss AS"
          },
          "registeredAt": {
            "type": "string",
            "description": "The date and time that the traffic event was registered, in ISO UTC format.",
            "example": "2023-01-01T12:03:00Z"
          }
        }
      },
      "TrafficEventRegistration": {
        "required": [
          "category",
          "isOperatorExempt",
          "reason",
          "subcategory"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "The main category of the traffic event.",
            "example": "CANCELLATION",
            "enum": [
              "CANCELLATION",
              "DELAY"
            ]
          },
          "subcategory": {
            "type": "string",
            "description": "The subcategory of the traffic event.\n\nPermitted values if `category` is `CANCELLATION`:\n- `FULL`\n- `PARTIAL`\n\nPermitted values if `category` is `DELAY`:\n- `FROM_START`\n- `IN_TRANSIT`\n",
            "example": "PARTIAL",
            "enum": [
              "FULL",
              "PARTIAL",
              "FROM_START",
              "IN_TRANSIT"
            ]
          },
          "reason": {
            "type": "string",
            "description": "The reason for the traffic event. If set to `OTHER`, a description must be provided in\nthe `reasonDescription` field.\n",
            "example": "IMPROPERLY_PARKED_VEHICLE",
            "enum": [
              "DRIVER_ERROR",
              "CUSTOMER_CARE",
              "TICKET_INSPECTION",
              "FAULTY_TICKET_MACHINE",
              "FAULTY_TAAS_SYSTEM",
              "FAULTY_SIS_SYSTEM",
              "FAULTY_DOOR",
              "FAULTY_ENGINE",
              "FAULTY_GEARBOX",
              "FAULTY_BRAKES",
              "NO_POWER",
              "HEAVY_SNOWFALL",
              "SLIPPERY_ROADS",
              "IMPROPERLY_PARKED_VEHICLE",
              "ROAD_WORK",
              "ROAD_ACCIDENT",
              "FALLEN_DEBRIS",
              "TRAFFIC_CONGESTION",
              "EVENT",
              "DEMONSTRATION",
              "OTHER"
            ]
          },
          "reasonDescription": {
            "type": "string",
            "description": "Required if `reason` is set to `OTHER`, optional otherwise. A further detailing of the\nreason for the traffic event, and if relevant, an explanation for why you as an\noperator should be exempt from being fined for any SLA breach(es) incurred as a\nconsequence of this traffic event (see `isOperatorExempt`).\n",
            "example": "En feilparkert bil blokkerte tras√©en",
            "default": "null"
          },
          "journeyRef": {
            "type": "string",
            "description": "Required if `lineRef` is `null`. A reference to the planned journey that is affected\nby this traffic event, if only a single journey is affected.\n\nFormat should be one of:\n- `RUT:DatedServiceJourney:<dated journey ID from plan data>`\n- `RUT:DatedServiceJourney:<vehicle task ID>-<journey start time in ISO offset format>`\n",
            "example": "RUT:DatedServiceJourney:1234-2023-01-01T13:00:00+01:00",
            "default": "null"
          },
          "lineRef": {
            "type": "string",
            "description": "Required if `journeyRef` is `null`, ignored otherwise. A reference to the affected\nline when multiple journeys are affected by this traffic event.\n",
            "example": "RUT:Line:123",
            "default": "null"
          },
          "startDateTime": {
            "type": "string",
            "description": "Required if `journeyRef` is `null`, optional otherwise. An ISO UTC date string\nrepresenting the date and time that the traffic event started. If `null`, the start\ntime of the journey represented by `journeyRef` is used instead.\n",
            "example": "2023-01-01T12:00:00Z",
            "default": "null"
          },
          "endDateTime": {
            "type": "string",
            "description": "Required if `journeyRef` is `null`, optional otherwise. An ISO UTC date string\nrepresenting the date and time that the traffic event ended. If `null`, the end time\nof the journey represented by `journeyRef`, plus `delayMinutes` if given, is used\ninstead.\n",
            "example": "2023-01-01T13:00:00Z",
            "default": "null"
          },
          "leftCancelledStopPlaceRef": {
            "type": "string",
            "description": "Required if `category` is `CANCELLATION` and `subcategory` is `PARTIAL`, ignored\notherwise. An NSR reference to one of the 2 stop places delimiting the sequence of\nstops affected by the partial cancellation, or to the single stop if only one stop is\naffected. See `rightStopPlaceRef`.\n",
            "example": "NSR:StopPlace:123",
            "default": "null"
          },
          "rightCancelledStopPlaceRef": {
            "type": "string",
            "description": "Required if `category` is `CANCELLATION` and `subcategory` is `PARTIAL`, ignored\notherwise. An NSR reference to the other of the 2 stop places delimiting the sequence\nof stops affected by the partial cancellation, or to the single stop if only one stop\nis affected. See `leftStopPlaceRef`.\n",
            "example": "NSR:StopPlace:246",
            "default": "null"
          },
          "delayMinutes": {
            "type": "integer",
            "description": "Required if `category` is `DELAY`, ignored otherwise. The number of minutes that the\njourney is delayed.\n",
            "format": "int32",
            "example": 21
          },
          "isOperatorExempt": {
            "type": "boolean",
            "description": "A flag indicating whether you as an operator consider that the event was outside your\ncontrol, and that you should be exempt from being fined for any SLA breach(es)\nincurred as a consequence of the traffic event. If needed, an exemption reason can be\nprovided in the `reasonDescription` field.\n"
          }
        }
      },
      "SlaBreach": {
        "required": [
          "category",
          "contractRef",
          "endDateTime",
          "isOperatorExempt",
          "reason",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The SLA breach ID. Must be `null` on registration.",
            "example": "1234-1",
            "default": "null"
          },
          "trafficCaseNumber": {
            "type": "string",
            "description": "The traffic case number of the Ruterlogg traffic case that was created to log this SLA\nbreach. Must be `null` on registration.\n",
            "example": "2023-1234",
            "default": "null"
          },
          "category": {
            "type": "string",
            "description": "The SLA breach category.",
            "example": "DATA_QUALITY",
            "enum": [
              "DATA_QUALITY"
            ]
          },
          "reason": {
            "type": "string",
            "description": "The reason for the SLA breach.",
            "example": "TAAS_ERROR",
            "enum": [
              "TAAS_ERROR",
              "SIS_ERROR",
              "OTHER"
            ]
          },
          "reasonDescription": {
            "type": "string",
            "description": "Required if `reason` is `OTHER`, optional otherwise. A further detailing of the reason\nfor the SLA breach, and if relevant, an explanation for why you as an operator should\nbe exempt from being fined for this breach.\n",
            "example": "TaaS MQTT-broker var utilgjengelig",
            "default": "null"
          },
          "contractRef": {
            "type": "string",
            "description": "A reference to the contract that governs the SLA that was breached.",
            "example": "RUT:Contract:123"
          },
          "startDateTime": {
            "type": "string",
            "description": "An ISO UTC date string representing the date and time that the SLA breach started.",
            "example": "2023-01-01T12:00:00Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "An ISO UTC date string representing the date and time that the SLA breach ended.",
            "example": "2023-01-01T12:00:00Z"
          },
          "isOperatorExempt": {
            "type": "boolean",
            "description": "A flag flag indicating whether you as an operator consider that the breach was outside\nyour control, and that you should be exempt from being fined for the breach.\n"
          },
          "registeredBy": {
            "type": "string",
            "description": "Your operator's client identifier, automatically inferred from your API credentials.\nMust be `null` on registration.\n",
            "example": "Ruterbuss AS",
            "default": "null"
          },
          "registeredAt": {
            "type": "string",
            "description": "The date and time that the traffic event was registered, in ISO UTC format. Must be\n`null` on registration.\n",
            "example": "2023-01-01T12:03:00Z",
            "default": "null"
          }
        }
      }
    }
  }
}
